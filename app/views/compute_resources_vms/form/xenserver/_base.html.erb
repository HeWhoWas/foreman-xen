<% new = f.object
   hide_raw = ''
   if params && params['host'] && params['host']['compute_attributes'] && params['host']['compute_attributes']['custom_template_name'] != ''
     hide_raw = 'display:none;'
   end

   if controller_name == 'hosts'
     fields_enabled = true
   elsif controller_name == 'compute_attributes'
     fields_enabled = true
   else
     fields_enabled = false
   end
-%>

<div class="children_fields">
  <fieldset id="vm_profile">
    <legend>VM Profile</legend>
    <div class="fields">
      <%= text_f f, :name, :disabled => !fields_enabled, :label => 'Name' if controller_name != 'hosts' %>
      <%= selectable_f f, :vcpus_max, 1..compute_resource.max_cpu_count, {}, :class => 'input-mini', :disabled => !fields_enabled, :label => 'vCPUs' %>
      <%= selectable_f f, :memory_min, memory_options(compute_resource.max_memory), {}, :class => 'form-control span2', :disabled => !fields_enabled, :label => 'Memory Min' %>
      <%= selectable_f f, :memory_max, memory_options(compute_resource.max_memory), {}, :class => 'form-control span2', :disabled => !fields_enabled, :label => 'Memory Max' %>
    </div>
  </fieldset>
</div>
<!--Templates -->
<div class="children_fields">
  <%= field_set_tag 'VM Template', :id => 'xen_templates', :title => _('Template') do -%>
      <%= render 'compute_resources_vms/form/templates', :f => f, :compute_resource => compute_resource, :new => new %>
  <% end -%>
</div>

<!-- XenStore Data -->
<div class="children_fields" id="xenserver-xenstore-data">
  <%= field_set_tag 'Xen Store Data', :id => 'xen_store_data', :title => _('Xen Store Data') do -%>
      <%= render 'compute_resources_vms/form/xenstore', :f => f, :compute_resource => compute_resource, :new => new %>
  <% end %>
</div>

<!--Storage-->
<div class="children_fields xenserver-raw" id="xenserver-storage" style="<%= hide_raw %>">
  <%= field_set_tag 'Storage', :id => 'storage_volumes', :title => _('Storage') do -%>
      <%= f.fields_for :VBDs do |i| %>
          <%= render 'compute_resources_vms/form/volume', :f => i, :compute_resource => compute_resource, :new => new %>
      <% end -%>
  <% end -%>
</div>

<div class="children_fields" id="xenserver-network" style="<%= hide_raw %>">
  <%= field_set_tag 'Network interfaces', :id => 'network_interfaces', :title => _('Networks') do -%>
      <%= f.fields_for :VIFs do |i| %>
          <%= render 'compute_resources_vms/form/network', :f => i, :compute_resource => compute_resource, :new => new %>
      <% end -%>
  <% end -%>
</div>

<div class="children_fields" id="xenserver-vm-start" style="<%= hide_raw %>">
  <%= field_set_tag 'VM Startup Options', :id => 'vm_starup_options', :title => _('Power ON this VM') do -%>
 	 <%= checkbox_f f, :start, :checked => true, :label => _("Power ON this VM") %>
  <% end -%>
</div>



<script type="text/javascript">
	
	// Check if its a computer resource template then just do not show the form of XenStore
	
	if ($("#compute_attribute_compute_profile_id").length > 0){
	 $('#xenserver-xenstore-data').hide(1)
	}

    $(document).off('change.xenserver', '#compute_attribute_vm_attrs_custom_template_name');
    $(document).on('change.xenserver', '#compute_attribute_vm_attrs_custom_template_name', function (data) {
        if ($('option:selected', data.target).val() == "") {
			$('.xenserver-raw').show(1000)
			// IE and Chrome
	        $('.buildin_templates').prop("disabled", false);
			$('#compute_attribute_vm_attrs_builtin_template_name').removeAttr('disabled');
        } else {
        	$('.xenserver-raw').hide(1000)
			$('#compute_attribute_vm_attrs_builtin_template_name').val($("#compute_attribute_vm_attrs_builtin_template_name option:contains('No template')").val());
			// IE and Chrome
			$('#compute_attribute_vm_attrs_builtin_template_name').attr("disabled", 'disabled');
			$('.buildin_templates').prop("disabled", true);
			
        }

    });

    $(document).off('change.xenserver', '#compute_attribute_vm_attrs_builtin_template_name');
    $(document).on('change.xenserver', '#compute_attribute_vm_attrs_builtin_template_name', function (data) {
        $('.xenserver-raw').show(1000);
        $('.buildin_templates').prop("disabled", false);
		$('#compute_attribute_vm_attrs_builtin_template_name').removeAttr('disabled');
    })

	
	// Create a new host windows 
	
    $(document).off('change.xenserver', '#host_compute_attributes_custom_template_name');
    $(document).on('change.xenserver', '#host_compute_attributes_custom_template_name', function (data) {
        if ($('option:selected', data.target).val() == "") {
			$('.xenserver-raw').show(1000)
			// IE and Chrome
	        $('.buildin_templates').prop("disabled", false);
			$('#host_compute_attributes_builtin_template_name').removeAttr('disabled');
        } else {
        	$('.xenserver-raw').hide(1000)
			$('#host_compute_attributes_builtin_template_name').val($("#host_compute_attributes_builtin_template_name option:contains('No template')").val());
			// IE and Chrome
			$('#host_compute_attributes_builtin_template_name').attr("disabled", 'disabled');
			$('.buildin_templates').prop("disabled", true);
			
        }

    });

    $(document).off('change.xenserver', '#host_compute_attributes_builtin_template_name');
    $(document).on('change.xenserver', '#host_compute_attributes_builtin_template_name', function (data) {
        	$('.xenserver-raw').show(1000);
        	$('.buildin_templates').prop("disabled", false);
		$('#host_compute_attributes_builtin_template_name').removeAttr('disabled');
    })
</script>